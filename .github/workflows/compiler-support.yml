name: Compiler Compatibility CI

on:
  push:
    branches: [master]
  pull_request:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        compiler:
          - { tag: "ubuntu-2204_clang-12", os: "Ubuntu 22.04", name: "Clang 12", cxx: "/usr/bin/clang++-12", cc: "/usr/bin/clang-12", runs-on: "ubuntu-22.04" }
          - { tag: "ubuntu-2204_clang-13", os: "Ubuntu 22.04", name: "Clang 13", cxx: "/usr/bin/clang++-13", cc: "/usr/bin/clang-13", runs-on: "ubuntu-22.04" }
          - { tag: "ubuntu-2204_clang-14", os: "Ubuntu 22.04", name: "Clang 14", cxx: "/usr/bin/clang++-14", cc: "/usr/bin/clang-14", runs-on: "ubuntu-22.04" }
          - { tag: "ubuntu-2204_gcc-10", os: "Ubuntu 22.04", name: "G++ 10", cxx: "/usr/bin/g++-10", cc: "/usr/bin/gcc-10", runs-on: "ubuntu-22.04" }
          - { tag: "ubuntu-2204_gcc-11", os: "Ubuntu 22.04", name: "G++ 11", cxx: "/usr/bin/g++-11", cc: "/usr/bin/gcc-11", runs-on: "ubuntu-22.04" }
          - { tag: "ubuntu-2004_clang-12", os: "Ubuntu 20.04", name: "Clang 12", cxx: "/usr/bin/clang++-12", cc: "/usr/bin/clang-12", runs-on: "ubuntu-20.04" }
          - { tag: "ubuntu-2004_clang-11", os: "Ubuntu 20.04", name: "Clang 11", cxx: "/usr/bin/clang++-11", cc: "/usr/bin/clang-11", runs-on: "ubuntu-20.04" }
          - { tag: "ubuntu-2004_clang-10", os: "Ubuntu 20.04", name: "Clang 10", cxx: "/usr/bin/clang++-10", cc: "/usr/bin/clang-10", runs-on: "ubuntu-20.04" }
          - { tag: "ubuntu-2004_gcc-10", os: "Ubuntu 20.04", name: "G++ 10", cxx: "/usr/bin/g++-10", cc: "/usr/bin/gcc-10", runs-on: "ubuntu-20.04" }
    runs-on: ${{ matrix.compiler.runs-on }}
    name: Compiler ${{ matrix.compiler.os }} ${{ matrix.compiler.name }}
    env:
      CXX: ${{ matrix.compiler.cxx }}
      CC: ${{ matrix.compiler.cc }}
    outputs:
      # Because github wants us to suffer we need to list out every output instead of using a matrix statement or some kind of dynamic setting
      ubuntu-2204_clang-12: ${{ steps.status.outputs.ubuntu-2204_clang-12 }}
      ubuntu-2204_clang-13: ${{ steps.status.outputs.ubuntu-2204_clang-13 }}
      ubuntu-2204_clang-14: ${{ steps.status.outputs.ubuntu-2204_clang-14 }}
      ubuntu-2204_gcc-10: ${{ steps.status.outputs.ubuntu-2204_gcc-10 }}
      ubuntu-2204_gcc-11: ${{ steps.status.outputs.ubuntu-2204_gcc-11 }}
      ubuntu-2004_clang-12: ${{ steps.status.outputs.ubuntu-2004_clang-12 }}
      ubuntu-2004_clang-11: ${{ steps.status.outputs.ubuntu-2004_clang-11 }}
      ubuntu-2004_clang-10: ${{ steps.status.outputs.ubuntu-2004_clang-10 }}
      ubuntu-2004_gcc-10: ${{ steps.status.outputs.ubuntu-2004_gcc-10 }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install CMake
        uses: lukka/get-cmake@latest
      - name: Install GTest
        uses: ./.github/actions/install/gtest
      - name: Install Curl
        uses: ./.github/actions/install/curl
      - name: Configure
        run: cmake . -DASYNCPP_BUILD_TEST=ON -G 'Unix Makefiles'
      - name: Build
        run: cmake --build .
      - name: Test
        run: ./asyncpp_curl-test
      - name: Update Result
        id: status
        if: ${{ always() }}
        run: echo "::set-output name=${{ matrix.compiler.tag }}::${{ job.status }}"

  badge-upload:
    if:  ${{ github.event_name == 'push' && always() }}
    needs: [build]
    runs-on: ubuntu-20.04
    name: Publish badges
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Publish Badges
        uses: ./.github/actions/badge
        with:
          category: compiler
          badges: ${{ toJson(needs.build.outputs) }}
    